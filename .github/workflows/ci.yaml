name: CI

on:
    pull_request:
        branches:
            - main
    push:
        branches:
            - main

jobs:
    build-and-test:
        name: Build the project
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3

            - name: Install dependencies
              run: npm ci

            - name: Run eslint
              run: npm run lint:fix

            - name: Test and coverage
              env:
                  DB_HOST: root
                  DB_PORT: 5500
                  DB_USERNAME: dbgate
                  DB_PASSWORD: root
                  DB_NAME: testdb
                  REFRESH_TOKEN_SECRET: hello
                  JWKS_URI: somhitng
                  PRIVATE_KEY: thisisrivatekey12345
              run: |
                  echo "DB_HOST: $DB_HOST"
                  echo "DB_PORT: $DB_PORT"
                  echo "DB_USERNAME: $DB_USERNAME"
                  echo "DB_PASSWORD: $DB_PASSWORD"
                  echo "DB_NAME: $DB_NAME"
                  echo "REFRESH_TOKEN_SECRET: $REFRESH_TOKEN_SECRET"
                  echo "JWKS_URI: $JWKS_URI"
                  echo "PRIVATE_KEY: $PRIVATE_KEY"

                  # Run your tests
                  npm run test

            - name: Build-ts
              run: npm run build

            - name: SonarCloud Scan
              uses: SonarSource/sonarcloud-github-action@master
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    build-and-push-docker:
        name: Build and Push Docker Image
        needs: build-and-test
        runs-on: ubuntu-latest
        env:
            IMAGE_NAME: devanshijodhani/mernstack_auth_service
            IMAGE_TAG: build-${{ github.run_number }}
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Log in to Docker Hub
              uses: docker/login-action@v1
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_PASSWORD }}

            - name: Build Docker image
              run: docker build -t ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} --platform linux/amd64 -f docker/prod/Dockerfile .

            - name: Push Docker image to Docker Hub
              run: docker push ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
